#############################################################################
# Makefile for building: libtuxeip
# Generated by qmake (2.01a) (Qt 4.8.4) on: mié 4. sep 11:21:49 2013
# Project:  tuxeip.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DWIN32 -DVALGRING
CFLAGS        = -pipe -g -Wall -Wextra $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -Wextra -frtti -fexceptions -mthreads $(DEFINES)
INCPATH       = -I'.' -I'c:/Qt/4.8.4/mkspecs/win32-g++'
LIB        =        ar -ru
QMAKE         = c:/Qt/4.8.4/bin/qmake.exe
IDC           = c:/Qt/4.8.4/bin/idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = cp
SED           = 
COPY_FILE     = $(COPY)
COPY_DIR      = cp -r
DEL_FILE      = rm
DEL_DIR       = rmdir
MOVE          = mv
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = AB.c \
		CIP_IOI.c \
		CM.c \
		ErrCodes.c \
		Ethernet_IP.c \
		LGX.c \
		MR.c \
		PLC.c \
		SendData.c 
OBJECTS       = debug/AB.o \
		debug/CIP_IOI.o \
		debug/CM.o \
		debug/ErrCodes.o \
		debug/Ethernet_IP.o \
		debug/LGX.o \
		debug/MR.o \
		debug/PLC.o \
		debug/SendData.o
DIST          = 
QMAKE_TARGET  = tuxeip
DESTDIR        = debug/ #avoid trailing-slash linebreak
TARGET         = libtuxeip.a
DESTDIR_TARGET = debug/libtuxeip.a

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Debug  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	$(LIB) $(DESTDIR_TARGET) $(OBJECTS) 

qmake:  FORCE
	@$(QMAKE) -spec c:/Qt/4.8.4/mkspecs/win32-g++ CONFIG+=declarative_debug -o Makefile.Debug tuxeip.pro

dist:
	$(ZIP) tuxeip.zip $(SOURCES) $(DIST) tuxeip.pro c:/Qt/4.8.4/mkspecs/features/device_config.prf c:/Qt/4.8.4/mkspecs/qconfig.pri c:/Qt/4.8.4/mkspecs/modules/qt_webkit_version.pri c:/Qt/4.8.4/mkspecs/features/qt_functions.prf c:/Qt/4.8.4/mkspecs/features/qt_config.prf c:/Qt/4.8.4/mkspecs/features/exclusive_builds.prf c:/Qt/4.8.4/mkspecs/features/default_pre.prf c:/Qt/4.8.4/mkspecs/features/win32/default_pre.prf c:/Qt/4.8.4/mkspecs/features/debug.prf c:/Qt/4.8.4/mkspecs/features/debug_and_release.prf c:/Qt/4.8.4/mkspecs/features/default_post.prf c:/Qt/4.8.4/mkspecs/features/win32/default_post.prf c:/Qt/4.8.4/mkspecs/features/build_pass.prf c:/Qt/4.8.4/mkspecs/features/staticlib.prf c:/Qt/4.8.4/mkspecs/features/static.prf c:/Qt/4.8.4/mkspecs/features/warn_on.prf c:/Qt/4.8.4/mkspecs/features/declarative_debug.prf c:/Qt/4.8.4/mkspecs/features/win32/rtti.prf c:/Qt/4.8.4/mkspecs/features/win32/exceptions.prf c:/Qt/4.8.4/mkspecs/features/win32/stl.prf c:/Qt/4.8.4/mkspecs/features/win32/windows.prf c:/Qt/4.8.4/mkspecs/features/win32/thread_off.prf c:/Qt/4.8.4/mkspecs/features/resources.prf c:/Qt/4.8.4/mkspecs/features/uic.prf c:/Qt/4.8.4/mkspecs/features/yacc.prf c:/Qt/4.8.4/mkspecs/features/lex.prf c:/Qt/4.8.4/mkspecs/features/include_source_dir.prf  RESOURCES FORMS IMAGES YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) debug/AB.o debug/CIP_IOI.o debug/CM.o debug/ErrCodes.o debug/Ethernet_IP.o debug/LGX.o debug/MR.o debug/PLC.o debug/SendData.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Debug

check: first

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 



####### Compile

debug/AB.o: AB.c AB.h \
		CIP_Types.h \
		Ethernet_IP.h \
		CIP_IOI.h \
		ErrCodes.h \
		CM.h \
		MR.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug/AB.o AB.c

debug/CIP_IOI.o: CIP_IOI.c CIP_IOI.h \
		CIP_Types.h \
		CM.h \
		Ethernet_IP.h \
		MR.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug/CIP_IOI.o CIP_IOI.c

debug/CM.o: CM.c CM.h \
		CIP_Types.h \
		Ethernet_IP.h \
		MR.h \
		CIP_Const.h \
		ErrCodes.h \
		CIP_IOI.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug/CM.o CM.c

debug/ErrCodes.o: ErrCodes.c ErrCodes.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug/ErrCodes.o ErrCodes.c

debug/Ethernet_IP.o: Ethernet_IP.c Ethernet_IP.h \
		CIP_Types.h \
		SendData.h \
		EIP_Const.h \
		ErrCodes.h \
		CIP_Const.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug/Ethernet_IP.o Ethernet_IP.c

debug/LGX.o: LGX.c LGX.h \
		CIP_Types.h \
		Ethernet_IP.h \
		AB.h \
		ErrCodes.h \
		CIP_Const.h \
		CIP_IOI.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug/LGX.o LGX.c

debug/MR.o: MR.c MR.h \
		CIP_Types.h \
		Ethernet_IP.h \
		ErrCodes.h \
		CIP_Const.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug/MR.o MR.c

debug/PLC.o: PLC.c PLC.h \
		CIP_Types.h \
		AB.h \
		Ethernet_IP.h \
		ErrCodes.h \
		CIP_Const.h \
		CM.h \
		MR.h \
		CIP_IOI.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug/PLC.o PLC.c

debug/SendData.o: SendData.c SendData.h \
		Ethernet_IP.h \
		CIP_Types.h \
		ErrCodes.h
	$(CC) -c $(CFLAGS) $(INCPATH) -o debug/SendData.o SendData.c

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

